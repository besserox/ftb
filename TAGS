
src/client_lib/ftb_client_lib.c,7711
#define FTBCI_MAX_SUBSCRIPTION_FIELDS FTBCI_MAX_SUBSCRIPTION_FIELDS29,874
#define FTBCI_MAX_EVENTS_PER_CLIENT FTBCI_MAX_EVENTS_PER_CLIENT30,915
typedef struct FTBCI_event_inst_list {FTBCI_event_inst_list34,988
    FTB_event_t event_inst;event_inst35,1027
    FTB_id_t src;src36,1055
} FTBCI_event_inst_list_t;FTBCI_event_inst_list_t37,1073
typedef struct FTBCI_callback_entry {FTBCI_callback_entry39,1101
    FTB_event_t *mask;mask40,1139
    int (*callback) (FTB_receive_event_t *, void *);callback41,1162
    void *arg;arg42,1215
} FTBCI_callback_entry_t;FTBCI_callback_entry_t43,1230
typedef struct FTBCI_tag_entry {FTBCI_tag_entry46,1272
    FTB_tag_t tag;tag47,1305
    FTB_client_handle_t owner;owner48,1324
    char data[FTB_MAX_DYNAMIC_DATA_SIZE];data49,1355
    FTB_tag_len_t data_len;data_len50,1397
} FTBCI_tag_entry_t;FTBCI_tag_entry_t51,1425
typedef FTBU_map_node_t FTBCI_map_mask_2_callback_entry_t;FTBCI_map_mask_2_callback_entry_t54,1454
typedef FTBU_map_node_t FTBCI_map_publishable_event_index_to_event_details;FTBCI_map_publishable_event_index_to_event_details55,1513
typedef struct FTBCI_client_info {FTBCI_client_info57,1590
    FTB_client_handle_t client_handle;client_handle58,1625
    FTB_id_t *id;id59,1664
    FTB_client_jobid_t jobid;jobid60,1682
    uint8_t subscription_type;subscription_type61,1712
    uint8_t err_handling;err_handling62,1743
    int max_polling_queue_len;max_polling_queue_len63,1769
    int event_queue_size;event_queue_size64,1800
    FTBU_list_node_t *event_queue;      		/* entry type: event_inst_list */event_queue65,1826
    FTBU_list_node_t *callback_event_queue;     /* entry type: event_inst_list */callback_event_queue66,1902
    FTBCI_map_mask_2_callback_entry_t *callback_map;callback_map67,1984
	FTBCI_map_publishable_event_index_to_event_details *declared_events_map;	declared_events_map68,2037
	int total_publish_events;total_publish_events69,2112
    uint16_t seqnum;seqnum70,2139
    pthread_mutex_t lock;lock71,2160
    pthread_cond_t cond;cond72,2186
    pthread_t callback;callback73,2211
    volatile int finalizing;finalizing74,2235
} FTBCI_client_info_t;FTBCI_client_info_t75,2264
typedef struct FTBCI_publish_event_index {FTBCI_publish_event_index81,2455
    FTB_event_name_t event_name;event_name82,2498
} FTBCI_publish_event_index_t;FTBCI_publish_event_index_t83,2531
typedef struct FTBCI_publish_event_details {FTBCI_publish_event_details85,2563
    FTB_severity_t severity;severity86,2608
} FTBCI_publish_event_details_t;FTBCI_publish_event_details_t87,2637
static pthread_mutex_t FTBCI_lock = PTHREAD_MUTEX_INITIALIZER;FTBCI_lock89,2671
static pthread_t callback_thread;callback_thread90,2734
typedef FTBU_map_node_t FTBCI_map_client_handle_2_client_info_t;FTBCI_map_client_handle_2_client_info_t91,2768
static FTBCI_map_client_handle_2_client_info_t *FTBCI_client_info_map = NULL;FTBCI_client_info_map92,2833
typedef FTBU_map_node_t FTBCI_map_tag_2_tag_entry_t;FTBCI_map_tag_2_tag_entry_t95,2927
static FTBCI_map_tag_2_tag_entry_t *FTBCI_tag_map;FTBCI_tag_map96,2980
static char tag_string[FTB_MAX_DYNAMIC_DATA_SIZE];tag_string97,3031
static int tag_size = 1;tag_size98,3082
static uint8_t tag_count = 0;tag_count99,3107
static int enable_callback = 0;enable_callback102,3145
static int num_components = 0;num_components103,3177
static inline void FTBCI_lock_client_lib()FTBCI_lock_client_lib105,3209
static inline void FTBCI_unlock_client_lib()FTBCI_unlock_client_lib111,3295
static inline void FTBCI_lock_client(FTBCI_client_info_t * client_info)FTBCI_lock_client117,3385
static inline void FTBCI_unlock_client(FTBCI_client_info_t * client_info)FTBCI_unlock_client123,3507
int FTBCI_util_is_equal_declared_event_index(const void *lhs_void, const void *rhs_void)FTBCI_util_is_equal_declared_event_index129,3633
int FTBCI_util_is_equal_event(const void *lhs_void, const void *rhs_void)FTBCI_util_is_equal_event140,3979
int FTBCI_util_is_equal_tag(const void *lhs_void, const void *rhs_void)FTBCI_util_is_equal_tag149,4214
int FTBCI_util_is_equal_clienthandle(const void *lhs_void, const void *rhs_void)FTBCI_util_is_equal_clienthandle158,4416
#define FTBCI_LOOKUP_CLIENT_INFO(FTBCI_LOOKUP_CLIENT_INFO166,4682
static int FTBCI_convert_clientid_to_clienthandle(const FTB_client_id_t client_id,FTBCI_convert_clientid_to_clienthandle184,5300
int FTBCI_split_namespace(const char *event_space, char *region_name, char *category_name,FTBCI_split_namespace193,5596
int FTBCI_check_subscription_value_pair(const char *lhs, const char *rhs,FTBCI_check_subscription_value_pair255,7293
int FTBCI_parse_subscription_string(const char *subscription_str, FTB_event_t * subscription_event)FTBCI_parse_subscription_string357,11273
int FTBCI_check_severity_values(const FTB_severity_t severity)FTBCI_check_severity_values450,14028
int FTBCI_store_declared_events(FTBCI_client_info_t * client_info, const FTB_event_info_t *event_table, int num_events)FTBCI_store_declared_events460,14324
static void FTBCI_util_cleanup_declared_events_map(FTBCI_client_info_t * client_info)FTBCI_util_cleanup_declared_events_map520,16765
static void FTBCI_util_push_to_comp_polling_list(FTBCI_client_info_t * client_info,FTBCI_util_push_to_comp_polling_list539,17480
static void FTBCI_util_add_to_callback_map(FTBCI_client_info_t * client_info, const FTB_event_t * event,FTBCI_util_add_to_callback_map565,18296
static void FTBCI_util_remove_from_callback_map(FTBCI_client_info_t * client_info,FTBCI_util_remove_from_callback_map584,19206
static void FTBCI_util_handle_FTBM_msg(FTBM_msg_t * msg)FTBCI_util_handle_FTBM_msg604,20096
static void *FTBCI_callback_thread_client(void *arg)FTBCI_callback_thread_client650,21768
static void *FTBCI_callback_component(void *arg)FTBCI_callback_component675,22413
static void FTBCI_util_finalize_component(FTBCI_client_info_t * client_info)FTBCI_util_finalize_component763,25983
int FTBC_Connect(FTB_client_t * cinfo, uint8_t extension, FTB_client_handle_t * client_handle)FTBC_Connect806,27415
int FTBCI_check_schema_file(const FTB_client_handle_t client_handle, const char *schema_file)FTBCI_check_schema_file981,34254
int FTBC_Declare_publishable_events(FTB_client_handle_t client_handle, const char *schema_file,FTBC_Declare_publishable_events1076,38034
int FTBC_Subscribe_with_polling(FTB_subscribe_handle_t * subscribe_handle,FTBC_Subscribe_with_polling1108,39075
int FTBC_Subscribe_with_callback(FTB_subscribe_handle_t * subscribe_handle,FTBC_Subscribe_with_callback1159,40884
int FTBC_Get_event_handle(const FTB_receive_event_t receive_event, FTB_event_handle_t * event_handle)FTBC_Get_event_handle1216,43018
int FTBC_Compare_event_handles(const FTB_event_handle_t event_handle1,FTBC_Compare_event_handles1240,44114
int FTBC_Publish(FTB_client_handle_t client_handle, const char *event_name,FTBC_Publish1265,45416
int FTBC_Poll_event(FTB_subscribe_handle_t subscribe_handle, FTB_receive_event_t * receive_event)FTBC_Poll_event1359,49328
int FTBC_Unsubscribe(FTB_subscribe_handle_t * subscribe_handle)FTBC_Unsubscribe1571,59234
int FTBC_Disconnect(FTB_client_handle_t client_handle)FTBC_Disconnect1610,60517
static void FTBCI_util_update_tag_string()FTBCI_util_update_tag_string1669,62184
int FTBC_Add_dynamic_tag(FTB_client_handle_t handle, FTB_tag_t tag, const char *tag_data,FTBC_Add_dynamic_tag1691,63009
int FTBC_Remove_dynamic_tag(FTB_client_handle_t handle, FTB_tag_t tag)FTBC_Remove_dynamic_tag1740,64687
int FTBC_Read_dynamic_tag(const FTB_receive_event_t * event, FTB_tag_t tag, char *tag_data,FTBC_Read_dynamic_tag1771,65567

src/client_lib/platforms/linux/libftb.c,1323
FILE *FTBU_log_file_fp;FTBU_log_file_fp18,664
int FTB_Connect(const FTB_client_t * client_info, FTB_client_handle_t * client_handle)FTB_Connect20,689
int FTB_Publish(FTB_client_handle_t client_handle, const char *event_name,FTB_Publish27,894
int FTB_Subscribe(FTB_subscribe_handle_t * subscribe_handle, FTB_client_handle_t client_handle,FTB_Subscribe34,1159
int FTB_Unsubscribe(FTB_subscribe_handle_t * subscribe_handle)FTB_Unsubscribe46,1672
int FTB_Declare_publishable_events(FTB_client_handle_t client_handle, const char *schema_file,FTB_Declare_publishable_events52,1788
int FTB_Poll_event(FTB_subscribe_handle_t subscribe_handle, FTB_receive_event_t * receive_event)FTB_Poll_event59,2063
int FTB_Disconnect(FTB_client_handle_t client_handle)FTB_Disconnect69,2316
int FTB_Get_event_handle(const FTB_receive_event_t receive_event, FTB_event_handle_t * event_handle)FTB_Get_event_handle75,2419
int FTB_Compare_event_handles(const FTB_event_handle_t event_handle1,FTB_Compare_event_handles81,2589
int FTB_Add_tag(FTB_client_handle_t client_handle, FTB_tag_t tag, const char *tag_data,FTB_Add_tag89,2819
int FTB_Remove_tag(FTB_client_handle_t client_handle, FTB_tag_t tag)FTB_Remove_tag96,3026
int FTB_Read_tag(const FTB_receive_event_t * event, FTB_tag_t tag, char *tag_data,FTB_Read_tag102,3157

src/client_lib/platforms/bg/ftb_zoid_wrapper.c,1316
int FTB_Connect(const FTB_client_t * client_info, FTB_client_handle_t * client_handle)FTB_Connect24,751
int FTB_Declare_publishable_events(FTB_client_handle_t client_handle, const char *schema_file,FTB_Declare_publishable_events33,944
int FTB_Publish(FTB_client_handle_t client_handle, const char *event_name,FTB_Publish40,1216
int FTB_Subscribe(FTB_subscribe_handle_t * subscribe_handle, FTB_client_handle_t client_handle,FTB_Subscribe47,1485
int FTB_Unsubscribe(FTB_subscribe_handle_t * subscribe_handle)FTB_Unsubscribe58,1872
int FTB_Poll_event(FTB_subscribe_handle_t subscribe_handle, FTB_receive_event_t * receive_event)FTB_Poll_event64,1992
int FTB_Disconnect(FTB_client_handle_t client_handle)FTB_Disconnect74,2249
int FTB_Get_event_handle(const FTB_receive_event_t receive_event, FTB_event_handle_t * event_handle)FTB_Get_event_handle80,2356
int FTB_Compare_event_handles(const FTB_event_handle_t event_handle1,FTB_Compare_event_handles86,2530
int FTB_Add_dynamic_tag(FTB_client_handle_t client_handle, FTB_tag_t tag, const char *tag_data,FTB_Add_dynamic_tag95,2765
int FTB_Remove_dynamic_tag(FTB_client_handle_t client_handle, FTB_tag_t tag)FTB_Remove_dynamic_tag105,3063
int FTB_Read_dynamic_tag(const FTB_event_t * event, FTB_tag_t tag, char *tag_data,FTB_Read_dynamic_tag110,3205

src/client_lib/platforms/bg/zoid_client/implementation/ftb_zoid_client.c,1205
FILE *FTBU_log_file_fp;FTBU_log_file_fp21,697
static int nclients;nclients23,722
void ftb_zoid_client_init(int count)ftb_zoid_client_init25,744
void ftb_zoid_client_fini()ftb_zoid_client_fini44,1301
int ZOID_FTB_Connect(const FTB_client_t * client_info /* in:ptr */ ,ZOID_FTB_Connect52,1389
int ZOID_FTB_Publish(FTB_client_handle_t client_handle /* in:obj */ ,ZOID_FTB_Publish69,2015
int ZOID_FTB_Subscribe(FTB_subscribe_handle_t * subscribe_handle /* out:ptr */ ,ZOID_FTB_Subscribe78,2395
int ZOID_FTB_Unsubscribe(FTB_subscribe_handle_t * subscribe_handle /* in:ptr */)ZOID_FTB_Unsubscribe86,2711
int ZOID_FTB_Declare_publishable_events(FTB_client_handle_t client_handle /* in:obj */ ,ZOID_FTB_Declare_publishable_events92,2845
int ZOID_FTB_Poll_event(FTB_subscribe_handle_t subscribe_handle /* in:obj */ ,ZOID_FTB_Poll_event101,3280
int ZOID_FTB_Disconnect(FTB_client_handle_t client_handle /* in:obj */)ZOID_FTB_Disconnect109,3502
int ZOID_FTB_Get_event_handle(const FTB_receive_event_t receive_event /* in:obj */ ,ZOID_FTB_Get_event_handle115,3623
int ZOID_FTB_Compare_event_handles(const FTB_event_handle_t event_handle1 /* in:obj */ ,ZOID_FTB_Compare_event_handles122,3856

src/client_lib/platforms/bg/zoid_client/ftb_zoid_client_bgl.h,51
#define FTB_ZOID_CLIENT_HFTB_ZOID_CLIENT_H13,569

src/client_lib/platforms/bg/zoid_client/ftb_zoid_client_bgp.h,51
#define FTB_ZOID_CLIENT_HFTB_ZOID_CLIENT_H13,569

src/client_lib/include/ftb_client_lib.h,49
#define FTB_CLIENT_LIB_HFTB_CLIENT_LIB_H13,568

src/util/ftb_auxil.c,270
void soft_trim(char **str)soft_trim19,634
char *trim_string(const char *str)trim_string44,1041
int concatenate_strings(char *str, ...)concatenate_strings64,1573
int check_alphanumeric_underscore_format(const char *str)check_alphanumeric_underscore_format82,1894

src/util/ftb_util.c,2460
int FTBU_match_mask(const FTB_event_t * event, const FTB_event_t * mask)FTBU_match_mask32,983
int FTBU_is_equal_location_id(const FTB_location_id_t * lhs, const FTB_location_id_t * rhs)FTBU_is_equal_location_id89,3302
int FTBU_is_equal_ftb_id(const FTB_id_t * lhs, const FTB_id_t * rhs)FTBU_is_equal_ftb_id105,3903
int FTBU_is_equal_event(const FTB_event_t * lhs, const FTB_event_t * rhs)FTBU_is_equal_event121,4437
int FTBU_is_equal_event_mask(const FTB_event_t * lhs, const FTB_event_t * rhs)FTBU_is_equal_event_mask137,4862
int FTBU_is_equal_clienthandle(const FTB_client_handle_t * lhs, const FTB_client_handle_t * rhs)FTBU_is_equal_clienthandle158,5549
#define FTB_BOOTSTRAP_UTIL_MAX_STR_LEN FTB_BOOTSTRAP_UTIL_MAX_STR_LEN176,6133
void FTBU_get_output_of_cmd(const char *cmd, char *output, size_t len)FTBU_get_output_of_cmd178,6178
static inline int util_key_match(const FTBU_map_node_t * head, FTBU_map_key_t key1,util_key_match251,8304
FTBU_map_node_t *FTBU_map_init(int (*is_equal_func_ptr) (const void *, const void *)) FTBU_map_init266,8898
int FTBU_map_insert(FTBU_map_node_t * head, FTBU_map_key_t key, void *data)FTBU_map_insert281,9403
inline FTBU_map_node_t *FTBU_map_begin(const FTBU_map_node_t * head)FTBU_map_begin306,10197
FTBU_map_node_t *FTBU_map_find_key(const FTBU_map_node_t * head, FTBU_map_key_t key) FTBU_map_find_key317,10505
inline FTBU_map_key_t FTBU_map_get_key(FTBU_map_node_t *node)FTBU_map_get_key331,10852
inline void *FTBU_map_get_data(FTBU_map_node_t *node)FTBU_map_get_data340,11016
int FTBU_map_remove_key(FTBU_map_node_t * head, FTBU_map_key_t key) FTBU_map_remove_key350,11202
int FTBU_map_remove_node(FTBU_map_node_t * node)FTBU_map_remove_node369,11666
int FTBU_map_finalize(FTBU_map_node_t * head) FTBU_map_finalize382,11920
inline FTBU_map_node_t *FTBU_map_end(const FTBU_map_node_t * head)FTBU_map_end402,12378
inline FTBU_map_node_t *FTBU_map_next_node(FTBU_map_node_t *node)FTBU_map_next_node411,12564
int FTBU_map_is_empty(const FTBU_map_node_t * head)FTBU_map_is_empty420,12737
inline void FTBU_list_init(FTBU_list_node_t * list)FTBU_list_init432,12918
inline void FTBU_list_add_front(FTBU_list_node_t * list, FTBU_list_node_t* node) FTBU_list_add_front442,13143
inline void FTBU_list_add_back(FTBU_list_node_t * list, FTBU_list_node_t *node) FTBU_list_add_back453,13429
inline void FTBU_list_remove_node(FTBU_list_node_t * node)FTBU_list_remove_node465,13681

src/agent/ftb_agent.c,451
static volatile int done = 0;done24,770
static pthread_t progress_thread, progress_thread_main;progress_thread25,800
static pthread_t progress_thread, progress_thread_main;progress_thread_main25,800
static pthread_mutex_t lock = PTHREAD_MUTEX_INITIALIZER;lock26,856
FILE *FTBU_log_file_fp;FTBU_log_file_fp28,914
void *progress_loop()progress_loop30,939
void handler(int sig)handler118,4426
int main(int argc, char *argv[])main126,4521

src/include/ftb_util.h,1243
#define FTB_UTIL_HFTB_UTIL_H13,562
#define FTBU_ERR_ABORT(FTBU_ERR_ABORT25,733
#define FTBU_WARNING(FTBU_WARNING35,1087
#define FTBU_INFO(FTBU_INFO45,1444
#define FTBU_INFO(FTBU_INFO54,1783
#define FTBU_SUCCESS FTBU_SUCCESS58,1894
#define FTBU_EXIST FTBU_EXIST59,1923
#define FTBU_NOT_EXIST FTBU_NOT_EXIST60,1952
#define FTBU_NULL_PTR	FTBU_NULL_PTR62,1982
#define FTBU_MAP_PTR_KEY(FTBU_MAP_PTR_KEY64,2011
typedef union FTBU_map_key {FTBU_map_key66,2076
    void *key_ptr;key_ptr67,2105
} FTBU_map_key_t;FTBU_map_key_t68,2124
typedef struct FTBU_map_node {FTBU_map_node89,3080
    struct FTBU_map_node *next;next90,3111
    struct FTBU_map_node *prev;prev91,3143
    FTBU_map_key_t key;key92,3175
    void *data;  /*For head node, data is a func ptr that points to a comparison function */                 data93,3199
} FTBU_map_node_t;FTBU_map_node_t94,3309
typedef struct FTBU_list_node {FTBU_list_node103,3567
	struct FTBU_list_node *next;next104,3599
	struct FTBU_list_node *prev;prev105,3629
	void *data;data106,3659
} FTBU_list_node_t;FTBU_list_node_t107,3672
#define FTBU_list_for_each_readonly(FTBU_list_for_each_readonly109,3693
#define FTBU_list_for_each(FTBU_list_for_each112,3794

src/include/ftb_auxil.h,39
#define FTB_AUXIL_HFTB_AUXIL_H19,687

src/manager_lib/network/network_sock/ftb_bootstrap_udp.c,1309
static FTBN_addr_sock_t FTBNI_bootstrap_my_addr;FTBNI_bootstrap_my_addr35,994
static FTBN_config_info_t FTBNI_bootstrap_config_location;FTBNI_bootstrap_config_location36,1043
static FTBNI_config_sock_t FTBNI_bootstrap_config;FTBNI_bootstrap_config37,1102
static int FTBNI_util_send_bootstrap_msg(const FTBNI_bootstrap_pkt_t * pkt_send)FTBNI_util_send_bootstrap_msg39,1154
static int FTBNI_util_exchange_bootstrap_msg(const FTBNI_bootstrap_pkt_t * pkt_send,FTBNI_util_exchange_bootstrap_msg71,2187
static void FTBNI_util_get_network_addr(FTBN_addr_sock_t * my_addr)FTBNI_util_get_network_addr140,4402
int FTBNI_Bootstrap_init(const FTBN_config_info_t * config_info, FTBNI_config_sock_t * config,FTBNI_Bootstrap_init154,4770
int FTBNI_Bootstrap_get_parent_addr(uint16_t my_level, FTBN_addr_sock_t * parent_addr,FTBNI_Bootstrap_get_parent_addr166,5300
int FTBNI_Bootstrap_report_conn_failure(const FTBN_addr_sock_t * addr)FTBNI_Bootstrap_report_conn_failure204,6625
int FTBNI_Bootstrap_register_addr(uint16_t my_level)FTBNI_Bootstrap_register_addr216,6940
static int FTBNI_util_bootstrap_deregister_addr(int blocking)FTBNI_util_bootstrap_deregister_addr249,8003
int FTBNI_Bootstrap_finalize()FTBNI_Bootstrap_finalize280,8899
int FTBNI_Bootstrap_abort(void)FTBNI_Bootstrap_abort286,8988

src/manager_lib/network/network_sock/ftb_database_server_udp.c,836
FILE *FTBU_log_file_fp;FTBU_log_file_fp39,1143
static int fd = -1;fd42,1264
typedef struct FTBNI_bootstrap_entry {FTBNI_bootstrap_entry44,1285
    FTBN_addr_sock_t addr;addr45,1324
    uint32_t level;level46,1351
} FTBNI_bootstrap_entry_t;FTBNI_bootstrap_entry_t47,1371
static FTBU_map_node_t *FTBNI_bootstrap_addr_map;FTBNI_bootstrap_addr_map49,1399
static int FTBNI_addr_count = 0;FTBNI_addr_count50,1449
static FTBNI_config_sock_t FTBNI_bootstrap_config;FTBNI_bootstrap_config51,1482
void handler(int sig)handler53,1534
int FTNI_is_equal_addr_sock(const void *lhs_void, const void *rhs_void)FTNI_is_equal_addr_sock61,1637
static inline FTBNI_bootstrap_entry_t *FTBNI_util_find_parent_addr(const FTBNI_bootstrap_pkt_t * pkt_req)FTBNI_util_find_parent_addr72,1967
int main(int argc, char *argv[])main123,3732

src/manager_lib/network/network_sock/include/ftb_network_sock.h,2356
#define FTB_NETWORK_TCP_HFTB_NETWORK_TCP_H13,573
typedef struct FTBN_addr_sock {FTBN_addr_sock27,774
    char name[FTB_MAX_HOST_ADDR];name28,806
    int port;port29,840
} FTBN_addr_sock_t;FTBN_addr_sock_t30,854
typedef struct FTBNI_config_sock {FTBNI_config_sock32,875
    int agent_port;agent_port33,910
    char server_name[FTB_MAX_HOST_ADDR];server_name34,930
    int server_port;server_port35,971
} FTBNI_config_sock_t;FTBNI_config_sock_t36,992
#define FTBNI_LOCAL_IP FTBNI_LOCAL_IP38,1016
#define FTBNI_CONFIG_FILE_VAL FTBNI_CONFIG_FILE_VAL40,1053
#define FTBN_CONNECT_RETRY_COUNT FTBN_CONNECT_RETRY_COUNT43,1124
#define FTBN_CONNECT_BACKOFF_INIT_TIMEOUT FTBN_CONNECT_BACKOFF_INIT_TIMEOUT46,1202
#define FTBN_CONNECT_BACKOFF_RATIO FTBN_CONNECT_BACKOFF_RATIO49,1299
#define FTBNI_BOOTSTRAP_BACKOFF_INIT_TIMEOUT FTBNI_BOOTSTRAP_BACKOFF_INIT_TIMEOUT58,1590
#define FTBNI_BOOTSTRAP_BACKOFF_RATIO FTBNI_BOOTSTRAP_BACKOFF_RATIO61,1689
#define FTBNI_BOOTSTRAP_BACKOFF_RETRY_COUNT FTBNI_BOOTSTRAP_BACKOFF_RETRY_COUNT64,1783
#define FTBNI_BOOTSTRAP_MSG_TYPE_ADDR_REQ FTBNI_BOOTSTRAP_MSG_TYPE_ADDR_REQ66,1841
#define FTBNI_BOOTSTRAP_MSG_TYPE_ADDR_REP FTBNI_BOOTSTRAP_MSG_TYPE_ADDR_REP67,1888
#define FTBNI_BOOTSTRAP_MSG_TYPE_REG_REQ FTBNI_BOOTSTRAP_MSG_TYPE_REG_REQ68,1935
#define FTBNI_BOOTSTRAP_MSG_TYPE_REG_REP FTBNI_BOOTSTRAP_MSG_TYPE_REG_REP69,1982
#define FTBNI_BOOTSTRAP_MSG_TYPE_DEREG_REQ FTBNI_BOOTSTRAP_MSG_TYPE_DEREG_REQ70,2029
#define FTBNI_BOOTSTRAP_MSG_TYPE_DEREG_REP FTBNI_BOOTSTRAP_MSG_TYPE_DEREG_REP71,2076
#define FTBNI_BOOTSTRAP_MSG_TYPE_CONN_FAIL FTBNI_BOOTSTRAP_MSG_TYPE_CONN_FAIL72,2123
#define FTBNI_BOOTSTRAP_MSG_TYPE_REG_INVALID FTBNI_BOOTSTRAP_MSG_TYPE_REG_INVALID73,2170
typedef struct FTBNI_bootstrap_pkt {FTBNI_bootstrap_pkt75,2219
    uint8_t bootstrap_msg_type;bootstrap_msg_type76,2256
    FTBN_addr_sock_t addr;addr77,2288
    uint16_t level;level78,2315
} FTBNI_bootstrap_pkt_t;FTBNI_bootstrap_pkt_t79,2335
static inline void FTBNI_get_data_from_config_file(char *str, char *file, char *output_val, int *retval)FTBNI_get_data_from_config_file95,2860
static inline void FTBNI_util_setup_config_sock(FTBNI_config_sock_t * config)FTBNI_util_setup_config_sock122,3460
static inline struct hostent *FTBNI_gethostbyname(const char *name)FTBNI_gethostbyname200,6208

src/manager_lib/network/network_sock/ftb_network_tcp.c,2502
typedef struct FTB_connection_entry {FTB_connection_entry38,1066
    pthread_mutex_t lock;lock39,1104
    int err_flag;err_flag40,1130
    int fd;fd41,1148
    FTB_location_id_t *dst;dst42,1160
    volatile int ref_count;ref_count43,1188
} FTB_connection_entry_t;FTB_connection_entry_t44,1216
static FTBU_list_node_t *FTBNI_connection_table;FTBNI_connection_table46,1243
static pthread_mutex_t FTBNI_conn_table_lock = PTHREAD_MUTEX_INITIALIZER;FTBNI_conn_table_lock47,1292
static pthread_mutex_t FTBNI_recv_lock = PTHREAD_MUTEX_INITIALIZER;FTBNI_recv_lock48,1366
static int FTBNI_listen_fd = -1;FTBNI_listen_fd49,1434
static FTBN_addr_sock_t FTBN_my_addr;FTBN_my_addr50,1467
static FTBN_addr_sock_t FTBN_parent_addr;FTBN_parent_addr51,1505
static FTB_location_id_t FTBN_my_location_id;FTBN_my_location_id52,1547
static FTBN_config_info_t FTBN_config_location;FTBN_config_location53,1593
static FTBNI_config_sock_t FTBN_config;FTBN_config54,1641
static uint16_t FTBN_my_level = 0 - 1;FTBN_my_level55,1681
static inline void FTBNI_lock_conn_table()FTBNI_lock_conn_table57,1721
static inline void FTBNI_unlock_conn_table()FTBNI_unlock_conn_table62,1817
static inline void FTBNI_lock_recv()FTBNI_lock_recv67,1917
static inline void FTBNI_unlock_recv()FTBNI_unlock_recv72,2001
#define FTBNI_UTIL_READ(FTBNI_UTIL_READ77,2089
#define FTBNI_UTIL_WRITE(FTBNI_UTIL_WRITE101,2789
static inline FTBU_list_node_t *FTBNI_util_find_connection_to_location(const FTB_location_id_t *FTBNI_util_find_connection_to_location121,3337
static int FTBNI_util_listen()FTBNI_util_listen136,3854
static int FTBNI_util_connect_to(const FTBN_addr_sock_t * addr, const FTBM_msg_t * reg_msg,FTBNI_util_connect_to163,4697
int FTBN_Init(const FTB_location_id_t * my_id, const FTBN_config_info_t * config_info)FTBN_Init238,7183
int FTBN_Connect(const FTBM_msg_t * reg_msg, FTB_location_id_t * parent_location_id)FTBN_Connect256,7817
int FTBN_Finalize()FTBN_Finalize366,11428
int FTBN_Abort()FTBN_Abort389,11991
int FTBN_Disconnect_peer(const FTB_location_id_t * peer_location_id)FTBN_Disconnect_peer399,12194
int FTBN_Send_msg(const FTBM_msg_t * msg)FTBN_Send_msg428,12980
int FTBN_Recv_msg(FTBM_msg_t * msg, FTB_location_id_t * incoming_src, int blocking)FTBN_Recv_msg465,13988
int FTBN_Grab_messages(FTBM_msg_node_t **msg_head, FTBM_msg_node_t **msg_tail)FTBN_Grab_messages609,18829
int FTBN_Get_my_network_address(char *ipaddr)FTBN_Get_my_network_address741,22558

src/manager_lib/network/include/ftb_network.h,323
#define FTB_NETWORK_HFTB_NETWORK_H13,565
typedef struct FTBN_config_info {FTBN_config_info22,744
    uint32_t FTB_system_id;FTB_system_id23,778
    int leaf;leaf24,806
} FTBN_config_info_t;FTBN_config_info_t25,820
typedef FTBN_addr_sock_t FTBN_addr_t;FTBN_addr_t41,1121
#define FTBN_NO_MSG FTBN_NO_MSG59,1644

src/manager_lib/ftb_manager_lib.c,4689
typedef FTBU_map_node_t FTBMI_set_event_mask_t; /*a set of event_mask */FTBMI_set_event_mask_t31,908
typedef struct FTBMI_comp_info {FTBMI_comp_info33,982
    FTB_id_t id;id34,1015
    pthread_mutex_t lock;lock35,1032
    FTBMI_set_event_mask_t *catch_event_set;catch_event_set36,1058
} FTBMI_comp_info_t;FTBMI_comp_info_t37,1103
typedef FTBU_map_node_t FTBMI_map_ftb_id_2_comp_info_t; /*ftb_id as key and comp_info as data */FTBMI_map_ftb_id_2_comp_info_t39,1125
typedef FTBU_map_node_t FTBMI_map_event_mask_2_comp_info_map_t; /*event_mask as key, a _map_ of comp_info as data */FTBMI_map_event_mask_2_comp_info_map_t41,1223
typedef struct FTBM_node_info {FTBM_node_info43,1341
    FTB_location_id_t parent;   /*NULL if root */parent44,1373
    FTB_id_t self;self45,1423
    uint8_t err_handling;err_handling46,1442
    int leaf;leaf47,1468
    volatile int waiting;waiting48,1482
    FTBMI_map_ftb_id_2_comp_info_t *peers;      /*the map of peers includes parent */peers49,1508
    FTBMI_map_event_mask_2_comp_info_map_t *catch_event_map;catch_event_map50,1594
} FTBMI_node_info_t;FTBMI_node_info_t51,1655
static pthread_mutex_t FTBMI_lock = PTHREAD_MUTEX_INITIALIZER;FTBMI_lock53,1677
static pthread_mutex_t FTBN_lock = PTHREAD_MUTEX_INITIALIZER;FTBN_lock54,1740
static FTBMI_node_info_t FTBMI_info;FTBMI_info55,1802
static volatile int FTBMI_initialized = 0;FTBMI_initialized56,1839
pthread_mutex_t message_queue_mutex;message_queue_mutex58,1883
pthread_cond_t  message_queue_cond;message_queue_cond59,1920
FTBM_msg_node_t *message_queue_head = NULL;message_queue_head60,1956
FTBM_msg_node_t *message_queue_tail = NULL;message_queue_tail61,2000
static inline void lock_manager()lock_manager64,2046
static inline void unlock_manager()unlock_manager69,2122
static inline void lock_network()lock_network74,2202
static inline void unlock_network()unlock_network79,2277
static inline void lock_comp(FTBMI_comp_info_t * comp_info)lock_comp84,2356
static inline void unlock_comp(FTBMI_comp_info_t * comp_info)unlock_comp89,2463
int FTBMI_util_is_equal_ftb_id(const void *lhs_void, const void *rhs_void)FTBMI_util_is_equal_ftb_id95,2575
int FTBMI_util_is_equal_event(const void *lhs_void, const void *rhs_void)FTBMI_util_is_equal_event103,2785
int FTBMI_util_is_equal_event_mask(const void *lhs_void, const void *rhs_void)FTBMI_util_is_equal_event_mask110,3004
static void FTBMI_util_reg_propagation(int msg_type, const FTB_event_t * event,FTBMI_util_reg_propagation117,3233
static void FTBMI_util_remove_com_from_catch_map(const FTBMI_comp_info_t * comp,FTBMI_util_remove_com_from_catch_map155,4712
static void FTBMI_util_clean_component(FTBMI_comp_info_t * comp)FTBMI_util_clean_component188,5833
static inline FTBMI_comp_info_t *FTBMI_lookup_component(const FTB_id_t * id)FTBMI_lookup_component205,6378
static void FTBMI_util_reconnect()FTBMI_util_reconnect220,6772
static void FTBMI_util_get_system_id(uint32_t * system_id)FTBMI_util_get_system_id276,9143
static void FTBMI_util_get_location_id(FTB_location_id_t * location_id)FTBMI_util_get_location_id282,9228
int FTBM_Get_catcher_comp_list(const FTB_event_t * event, FTB_id_t ** list, int *len)FTBM_Get_catcher_comp_list302,9817
int FTBM_Release_comp_list(FTB_id_t * list)FTBM_Release_comp_list403,13819
int FTBM_Get_location_id(FTB_location_id_t * location_id)FTBM_Get_location_id412,13998
int FTBM_Get_parent_location_id(FTB_location_id_t * location_id)FTBM_Get_parent_location_id421,14228
int FTBM_Init(int leaf)FTBM_Init430,14455
int FTBM_Finalize()FTBM_Finalize502,17315
int FTBM_Abort()FTBM_Abort557,19207
int FTBM_Client_register(const FTB_id_t * id)FTBM_Client_register583,19877
int FTBM_Client_deregister(const FTB_id_t * id)FTBM_Client_deregister649,22381
int FTBM_Register_publishable_event(const FTB_id_t * id, FTB_event_t * event)FTBM_Register_publishable_event703,24093
int FTBM_Register_subscription(const FTB_id_t * id, FTB_event_t * event)FTBM_Register_subscription731,24890
int FTBM_Publishable_event_registration_cancel(const FTB_id_t * id, FTB_event_t * event)FTBM_Publishable_event_registration_cancel827,29034
int FTBM_Cancel_subscription(const FTB_id_t * id, FTB_event_t * event)FTBM_Cancel_subscription849,29730
int FTBM_Send(const FTBM_msg_t * msg)FTBM_Send888,30914
int FTBM_Poll(FTBM_msg_t * msg, FTB_location_id_t * incoming_src)FTBM_Poll932,32530
int FTBM_Wait(FTBM_msg_t * msg, FTB_location_id_t * incoming_src)FTBM_Wait957,33081
int FTBM_Recv(FTBM_msg_t * msg, FTB_location_id_t * incoming_src)FTBM_Recv983,33587
void *FTBM_Fill_message_queue(void *arg)FTBM_Fill_message_queue1012,34344

components/examples/ftb_eventhandle_example.c,404
static volatile int done = 0;done31,1010
static int is_server = 0;is_server32,1040
FTB_subscribe_handle_t shandle;shandle33,1066
void Sig_handler(int sig)Sig_handler35,1099
int eventhandle_server(FTB_receive_event_t * evt, void *arg)eventhandle_server49,1574
int eventhandle_client(FTB_receive_event_t * evt, void *arg)eventhandle_client98,3175
int main(int argc, char *argv[])main123,3917

components/examples/ftb_simple_subscriber.c,45
int main(int argc, char *argv[])main30,950

components/examples/ftb_ib_port_status_publisher.c,424
    struct ibv_device *nic;nic33,1000
    struct ibv_context *context;context34,1028
    struct ibv_pd *ptag;ptag35,1061
    struct ibv_qp **qp_hndl;qp_hndl36,1086
    struct ibv_cq *cq_hndl;cq_hndl37,1115
    pthread_t async_thread;async_thread38,1143
} ibv_info_t;ibv_info_t39,1171
ibv_info_t ibv_dev;ibv_dev41,1186
static void open_hca(void)open_hca46,1253
int main(int argc, char *argv[])main76,2039

components/examples/ftb_throw_delay_mpi.c,45
int main(int argc, char *argv[])main28,781

components/examples/ftb_simple_publisher.c,45
int main(int argc, char *argv[])main27,847

components/examples/ftb_pingpong.c,507
static volatile int done = 0;done40,1453
static struct timeval begin, end;begin41,1483
static struct timeval begin, end;end41,1483
static int is_server = 0;is_server42,1517
static int count = 0;count43,1543
static int iter = 0;iter44,1565
void Sig_handler(int sig)Sig_handler46,1587
int pingpong_server(FTB_receive_event_t * evt, void *arg)pingpong_server54,1739
int pingpong_client(FTB_receive_event_t * evt, void *arg)pingpong_client71,2254
int main(int argc, char *argv[])main93,2818

components/examples/ftb_alltoall.c,45
int main(int argc, char *argv[])main25,884

components/examples/ftb_watchdog.c,132
static volatile int done = 0;done29,894
void Int_handler(int sig)Int_handler31,925
int main(int argc, char *argv[])main37,997

components/examples/ftb_polling_logger.c,170
#define LOG_FILE LOG_FILE36,1146
static volatile int done = 0;done38,1179
void Int_handler(int sig)Int_handler40,1210
int main(int argc, char *argv[])main47,1283

components/examples/ftb_grouping.c,45
int main(int argc, char *argv[])main25,823

components/examples/ftb_notify_logger.c,245
#define LOG_FILE LOG_FILE33,979
static volatile int done = 0;done35,1012
void Int_handler(int sig)Int_handler37,1043
int event_logger(FTB_receive_event_t * evt, void *arg)event_logger44,1116
int main(int argc, char *argv[])main60,1657

components/examples/ftb_multiplecomp.c,999
FTB_client_handle_t Client3_ftb_handle;Client3_ftb_handle36,1082
FTB_subscribe_handle_t shandle3;shandle337,1122
int Client3_Finalize()Client3_Finalize39,1156
int Client3_evt_handler(FTB_receive_event_t * evt, void *arg)Client3_evt_handler48,1281
int Client3_Func()Client3_Func57,1592
int Client3_Init()Client3_Init64,1645
FTB_client_handle_t Client2_ftb_handle;Client2_ftb_handle109,2957
FTB_subscribe_handle_t shandle2;shandle2110,2997
int Client2_Finalize()Client2_Finalize112,3031
int Client2_PollandPublish()Client2_PollandPublish120,3178
int Client2_Init()Client2_Init142,3813
FTB_client_handle_t Client1_ftb_handle;Client1_ftb_handle196,5527
FTB_subscribe_handle_t shandle1;shandle1197,5567
int Client1_Finalize()Client1_Finalize199,5601
int Client1_evt_handler(FTB_receive_event_t * evt, void *arg)Client1_evt_handler208,5784
int Client1_Publish()Client1_Publish216,6084
int Client1_Init()Client1_Init230,6362
int main(int argc, char *argv[])main273,7664

components/examples/ftb_example_callback_unsubscribe.c,188
FTB_client_handle_t handle;handle32,970
int callback_handle_recovery(FTB_receive_event_t * evt, void *arg)callback_handle_recovery43,1326
int main(int argc, char *argv[])main63,2099

include/ftb_manager_lib.h,1062
#define FTB_MANAGER_HFTB_MANAGER_H13,565
#define FTBM_MSG_TYPE_NOTIFY FTBM_MSG_TYPE_NOTIFY24,714
#define FTBM_MSG_TYPE_CLIENT_REG FTBM_MSG_TYPE_CLIENT_REG27,836
#define FTBM_MSG_TYPE_CLIENT_DEREG FTBM_MSG_TYPE_CLIENT_DEREG28,892
#define FTBM_MSG_TYPE_REG_PUBLISHABLE_EVENT FTBM_MSG_TYPE_REG_PUBLISHABLE_EVENT31,1000
#define FTBM_MSG_TYPE_REG_SUBSCRIPTION FTBM_MSG_TYPE_REG_SUBSCRIPTION32,1057
#define FTBM_MSG_TYPE_PUBLISHABLE_EVENT_REG_CANCEL FTBM_MSG_TYPE_PUBLISHABLE_EVENT_REG_CANCEL33,1114
#define FTBM_MSG_TYPE_SUBSCRIPTION_CANCEL FTBM_MSG_TYPE_SUBSCRIPTION_CANCEL34,1171
typedef struct FTBM_msg {FTBM_msg36,1229
	int msg_type;msg_type37,1255
    FTB_id_t src;src38,1270
    FTB_id_t dst;dst39,1288
    FTB_event_t event;event40,1306
} FTBM_msg_t;FTBM_msg_t41,1329
typedef struct FTBM_msg_node {FTBM_msg_node43,1344
	struct FTBM_msg_node *next;next44,1375
	FTBM_msg_t *msg;msg45,1404
	FTB_location_id_t *incoming_src;incoming_src46,1422
} FTBM_msg_node_t;FTBM_msg_node_t47,1456
#define FTBM_NO_MSG FTBM_NO_MSG66,1842

include/libftb.h,33
#define LIBFTB_HLIBFTB_H14,561

include/ftb_client_lib_defs.h,2157
#define FTB_CLIENT_LIB_DEFS_HFTB_CLIENT_LIB_DEFS_H14,574
#define FTB_ERR_HANDLE_NONE FTB_ERR_HANDLE_NONE32,929
#define FTB_ERR_HANDLE_NOTIFICATION FTB_ERR_HANDLE_NOTIFICATION39,1127
#define FTB_ERR_HANDLE_RECOVER FTB_ERR_HANDLE_RECOVER46,1337
typedef struct FTB_client_id {FTB_client_id52,1485
    FTB_eventspace_t region;region53,1516
    FTB_eventspace_t comp_cat;comp_cat54,1545
    FTB_eventspace_t comp;comp55,1576
    FTB_client_name_t client_name;client_name56,1603
    uint8_t ext;ext57,1638
} FTB_client_id_t;FTB_client_id_t58,1655
struct FTB_client_handle {FTB_client_handle60,1675
    uint8_t valid;valid61,1702
    FTB_client_id_t client_id;client_id62,1721
typedef struct FTB_id {FTB_id65,1756
    FTB_location_id_t location_id;location_id66,1780
    FTB_client_id_t client_id;client_id67,1815
} FTB_id_t;FTB_id_t68,1846
typedef struct FTB_event {FTB_event74,1953
    FTB_eventspace_t region;region75,1980
    FTB_eventspace_t comp_cat;comp_cat76,2009
    FTB_eventspace_t comp;comp77,2040
    FTB_event_name_t event_name;event_name78,2067
    FTB_severity_t severity;severity79,2100
    FTB_client_jobid_t client_jobid;client_jobid80,2129
    FTB_client_name_t client_name;client_name81,2166
    FTB_hostip_t hostname;hostname82,2201
    uint16_t seqnum;seqnum83,2228
    uint8_t event_type;event_type84,2249
    char event_payload[FTB_MAX_PAYLOAD_DATA];event_payload85,2273
    FTB_tag_len_t len;len87,2334
    char dynamic_data[FTB_MAX_DYNAMIC_DATA_SIZE];dynamic_data88,2357
} FTB_event_t;FTB_event_t90,2414
struct FTB_subscribe_handle {FTB_subscribe_handle92,2430
    FTB_client_handle_t client_handle;client_handle93,2460
    FTB_event_t subscription_event;subscription_event94,2499
    uint8_t subscription_type;subscription_type95,2535
    uint8_t valid;valid96,2566
struct FTB_event_handle {FTB_event_handle99,2589
    FTB_event_name_t event_name;event_name100,2615
    FTB_severity_t severity;severity101,2648
    FTB_client_id_t client_id;client_id102,2677
    uint16_t seqnum;seqnum103,2708
    FTB_location_id_t location_id;location_id104,2729

include/ftb_def.h,5529
#define FTB_DEF_HFTB_DEF_H14,562
#define FTB_SUCCESS FTB_SUCCESS29,769
#define FTB_ERR_GENERAL FTB_ERR_GENERAL30,819
#define FTB_ERR_EVENTSPACE_FORMAT FTB_ERR_EVENTSPACE_FORMAT31,872
#define FTB_ERR_SUBSCRIPTION_STYLE FTB_ERR_SUBSCRIPTION_STYLE32,925
#define FTB_ERR_INVALID_VALUE FTB_ERR_INVALID_VALUE33,978
#define FTB_ERR_DUP_CALL FTB_ERR_DUP_CALL34,1031
#define FTB_ERR_NULL_POINTER FTB_ERR_NULL_POINTER35,1084
#define FTB_ERR_NOT_SUPPORTED FTB_ERR_NOT_SUPPORTED36,1137
#define FTB_ERR_INVALID_FIELD FTB_ERR_INVALID_FIELD37,1190
#define FTB_ERR_INVALID_HANDLE FTB_ERR_INVALID_HANDLE38,1243
#define FTB_ERR_DUP_EVENT FTB_ERR_DUP_EVENT39,1296
#define FTB_ERR_INVALID_SCHEMA_FILE FTB_ERR_INVALID_SCHEMA_FILE40,1350
#define FTB_ERR_INVALID_EVENT_NAME FTB_ERR_INVALID_EVENT_NAME41,1404
#define FTB_ERR_INVALID_EVENT_TYPE FTB_ERR_INVALID_EVENT_TYPE42,1458
#define FTB_ERR_SUBSCRIPTION_STR FTB_ERR_SUBSCRIPTION_STR43,1512
#define FTB_ERR_FILTER_ATTR FTB_ERR_FILTER_ATTR44,1566
#define FTB_ERR_FILTER_VALUE FTB_ERR_FILTER_VALUE45,1620
#define FTB_GOT_NO_EVENT FTB_GOT_NO_EVENT46,1674
#define FTB_FAILURE FTB_FAILURE47,1728
#define FTB_ERR_INVALID_PARAMETER FTB_ERR_INVALID_PARAMETER48,1782
#define FTB_ERR_NETWORK_GENERAL FTB_ERR_NETWORK_GENERAL49,1836
#define FTB_ERR_NETWORK_NO_ROUTE FTB_ERR_NETWORK_NO_ROUTE50,1890
#define FTB_ERR_TAG_NO_SPACE FTB_ERR_TAG_NO_SPACE53,1960
#define FTB_ERR_TAG_CONFLICT FTB_ERR_TAG_CONFLICT54,2014
#define FTB_ERR_TAG_NOT_FOUND FTB_ERR_TAG_NOT_FOUND55,2068
#define FTB_SUBSCRIPTION_NONE FTB_SUBSCRIPTION_NONE59,2175
#define FTB_SUBSCRIPTION_POLLING FTB_SUBSCRIPTION_POLLING62,2283
#define FTB_SUBSCRIPTION_NOTIFY FTB_SUBSCRIPTION_NOTIFY65,2379
#define FTB_DEFAULT_POLLING_Q_LEN FTB_DEFAULT_POLLING_Q_LEN67,2428
#define FTB_MAX_CLIENTSCHEMA_VER FTB_MAX_CLIENTSCHEMA_VER68,2468
#define FTB_MAX_EVENTSPACE FTB_MAX_EVENTSPACE69,2507
#define FTB_MAX_CLIENT_NAME FTB_MAX_CLIENT_NAME70,2547
#define FTB_MAX_CLIENT_JOBID FTB_MAX_CLIENT_JOBID71,2587
#define FTB_MAX_EVENT_NAME FTB_MAX_EVENT_NAME72,2627
#define FTB_MAX_SEVERITY FTB_MAX_SEVERITY73,2667
#define FTB_MAX_HOST_ADDR FTB_MAX_HOST_ADDR74,2707
#define FTB_MAX_PID_TIME FTB_MAX_PID_TIME75,2747
#define FTB_MAX_PAYLOAD_DATA FTB_MAX_PAYLOAD_DATA76,2787
#define FTB_MAX_SUBSCRIPTION_STYLE	FTB_MAX_SUBSCRIPTION_STYLE79,2898
#define FTB_EVENT_SIZE FTB_EVENT_SIZE85,3058
#define FTB_MAX_DYNAMIC_DATA_SIZE FTB_MAX_DYNAMIC_DATA_SIZE88,3115
typedef char FTB_eventspace_t[FTB_MAX_EVENTSPACE];FTB_eventspace_t99,3470
typedef char FTB_client_name_t[FTB_MAX_CLIENT_NAME];FTB_client_name_t100,3521
typedef char FTB_client_schema_ver_t[FTB_MAX_CLIENTSCHEMA_VER];FTB_client_schema_ver_t101,3574
typedef char FTB_client_jobid_t[FTB_MAX_CLIENT_JOBID];FTB_client_jobid_t102,3638
typedef char FTB_severity_t[FTB_MAX_SEVERITY];FTB_severity_t103,3693
typedef char FTB_event_name_t[FTB_MAX_EVENT_NAME];FTB_event_name_t104,3740
typedef char FTB_hostip_t[FTB_MAX_HOST_ADDR];FTB_hostip_t105,3791
typedef char FTB_subscription_style_t[FTB_MAX_SUBSCRIPTION_STYLE];FTB_subscription_style_t106,3837
typedef char FTB_pid_starttime_t[FTB_MAX_PID_TIME];FTB_pid_starttime_t107,3904
typedef uint8_t FTB_tag_t;FTB_tag_t110,3972
typedef uint8_t FTB_tag_len_t;FTB_tag_len_t111,3999
typedef struct FTB_client {FTB_client114,4038
    FTB_client_schema_ver_t client_schema_ver;client_schema_ver115,4066
    FTB_eventspace_t event_space;event_space116,4113
    FTB_client_name_t client_name;client_name117,4147
    FTB_client_jobid_t client_jobid;client_jobid118,4182
    FTB_subscription_style_t client_subscription_style;client_subscription_style119,4219
    int client_polling_queue_len;client_polling_queue_len120,4275
} FTB_client_t;FTB_client_t121,4309
typedef struct FTB_event_info {FTB_event_info123,4326
    FTB_event_name_t event_name;event_name124,4358
    FTB_severity_t severity;severity125,4391
} FTB_event_info_t;FTB_event_info_t126,4420
typedef struct FTB_event_properties {FTB_event_properties128,4441
    char event_type;event_type129,4479
    char event_payload[FTB_MAX_PAYLOAD_DATA];event_payload130,4500
} FTB_event_properties_t;FTB_event_properties_t131,4546
typedef struct FTB_location_id {FTB_location_id133,4573
    char hostname[FTB_MAX_HOST_ADDR];hostname134,4606
    FTB_pid_starttime_t pid_starttime;pid_starttime135,4644
    pid_t pid;pid136,4683
} FTB_location_id_t;FTB_location_id_t137,4698
typedef struct FTB_receive_event_info {FTB_receive_event_info139,4720
    FTB_eventspace_t event_space;event_space140,4760
    FTB_event_name_t event_name;event_name141,4794
    FTB_severity_t severity;severity142,4827
    FTB_client_jobid_t client_jobid;client_jobid143,4856
    FTB_client_name_t client_name;client_name144,4893
    uint8_t client_extension;client_extension145,4928
    uint16_t seqnum;seqnum146,4958
    FTB_location_id_t incoming_src;incoming_src147,4979
    uint8_t event_type;event_type148,5015
    char event_payload[FTB_MAX_PAYLOAD_DATA];event_payload149,5039
    FTB_tag_len_t len;len151,5100
    char dynamic_data[FTB_MAX_DYNAMIC_DATA_SIZE];dynamic_data152,5123
} FTB_receive_event_t;FTB_receive_event_t154,5180
typedef struct FTB_client_handle FTB_client_handle_t;FTB_client_handle_t156,5204
typedef struct FTB_subscribe_handle FTB_subscribe_handle_t;FTB_subscribe_handle_t157,5258
typedef struct FTB_event_handle FTB_event_handle_t;FTB_event_handle_t158,5318
